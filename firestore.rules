rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Função auxiliar para verificar se o usuário está autenticado
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Função auxiliar para verificar se o usuário está criando seu próprio documento
    function isCreatingOwnDocument(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // Função auxiliar para verificar se o usuário está acessando seu próprio documento
    function isAccessingOwnDocument(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // Função auxiliar para verificar se o usuário é amigo do documento que está acessando
    function isFriend(userId) {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)/friends/$(userId));
    }

    // Regras para a coleção users
    match /users/{userId} {
      // Permitir leitura para usuários autenticados
      allow read: if isAuthenticated();
      
      // Permitir criação se o ID do documento corresponder ao ID do usuário
      allow create: if isCreatingOwnDocument(userId);
      
      // Permitir atualização/exclusão apenas pelo próprio usuário
      allow update, delete: if isAccessingOwnDocument(userId);
      
      // Regras para subcoleções de usuários
      match /friends/{friendId} {
        allow read: if isAccessingOwnDocument(userId);
        allow write: if isAccessingOwnDocument(userId);
      }
    }

    // Regras para a coleção usernames
    match /usernames/{username} {
      // Permitir leitura para todos (necessário para verificar disponibilidade)
      allow read: if true;
      
      // Permitir criação se o UID no documento corresponder ao UID do usuário autenticado
      allow create: if isAuthenticated() && request.resource.data.uid == request.auth.uid;
      
      // Não permitir atualização/exclusão
      allow update, delete: if false;
    }
    
    // Regras para a coleção debts
    match /debts/{debtId} {
      // Permitir leitura apenas para o credor ou devedor
      allow read: if isAuthenticated() && 
        (resource.data.creditorId == request.auth.uid || 
         resource.data.debtorId == request.auth.uid);
      
      // Permitir criação apenas se o usuário for o credor
      allow create: if isAuthenticated() && 
        request.resource.data.creditorId == request.auth.uid;
      
      // Permitir atualização apenas para o credor ou devedor
      allow update: if isAuthenticated() && 
        (resource.data.creditorId == request.auth.uid || 
         resource.data.debtorId == request.auth.uid);
      
      // Não permitir exclusão
      allow delete: if false;
    }

    // Regras para a coleção de uploads
    match /uploads/{document=**} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated();
    }

    // Regras para imagens de perfil
    match /profile_images/{imageId} {
      allow read: if true;
      allow write: if isAuthenticated();
    }

    // Regras para a coleção groups
    match /groups/{groupId} {
      // Permitir leitura apenas para membros do grupo
      allow read: if isAuthenticated() && 
        request.auth.uid in resource.data.members;
      
      // Permitir criação apenas para usuários autenticados
      allow create: if isAuthenticated() && 
        request.resource.data.createdBy == request.auth.uid &&
        request.auth.uid in request.resource.data.members;
      
      // Permitir atualização apenas para o criador do grupo ou membros (com restrições)
      allow update: if isAuthenticated() && 
        (resource.data.createdBy == request.auth.uid || 
         request.auth.uid in resource.data.members);
      
      // Permitir exclusão apenas para o criador do grupo
      allow delete: if isAuthenticated() && 
        resource.data.createdBy == request.auth.uid;
    }

    // Regras para a coleção transactions
    match /transactions/{transactionId} {
      // Permitir leitura apenas para o remetente ou destinatário da transação
      allow read: if isAuthenticated() && 
        (resource.data.fromUser == request.auth.uid || 
         resource.data.toUser == request.auth.uid);
      
      // Permitir criação apenas se o usuário for o remetente
      allow create: if isAuthenticated() && 
        request.resource.data.fromUser == request.auth.uid;
      
      // Permitir atualização apenas para o remetente ou destinatário
      allow update: if isAuthenticated() && 
        (resource.data.fromUser == request.auth.uid || 
         resource.data.toUser == request.auth.uid);
      
      // Não permitir exclusão
      allow delete: if false;
    }

    // Regras para outras coleções
    match /{document=**} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated();
    }
  }
} 